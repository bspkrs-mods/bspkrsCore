buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath 'com.matthewprenger:CurseGradle:1.0-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.matthewprenger.cursegradle'

compileJava.options.encoding = 'UTF-8'

group = project.group_name
version = project.mod_version
archivesBaseName = "${project.mod_id}_mc${project.minecraft_version}-${project.minecraft_maxversion}_v"

minecraft {
    version = project.minecraft_version + '-' + project.forge_version // + "-" + project.minecraft_version // grab latest forge
    mappings = project.mappings_version
    runDir = 'run'
    replace '@MOD_VERSION@', project.mod_version
    replace '@MIN_MC_VERSION@', project.minecraft_version
    replace '@MAX_MC_VERSION@', project.minecraft_maxversion
}

processResources {
    // force replacements if input changes
    inputs.property 'mod_version', version
    inputs.property 'forge_version', project.forge_version
    inputs.property 'forge_versionlimit', project.forge_versionlimit
    inputs.property 'minecraft_version', project.minecraft_version
    inputs.property 'minecraft_maxversion', project.minecraft_maxversion
    
    // replace stuff in the files we want.
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        // replaces
        expand ([
            'mod_version': project.mod_version,
            'forge_version': project.forge_version,
            'forge_versionlimit': project.forge_versionlimit,
            'minecraft_version': project.minecraft_version,
            'minecraft_maxversion': project.minecraft_maxversion
        ])
    }

    // copy everything else that we didn't do before
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}

// change the name of my obfuscated jar
jar {
    appendix = project.appendix
}

sourceJar {
    appendix = 'src'
    classifier = ''
}

artifacts {
    archives sourceJar
}

if (project.hasProperty('api_key_curse') && project.hasProperty('extra_curse_id')) {
    tasks.curseforge.dependsOn signJars
    curseforge {
        apiKey = project.api_key_curse

        project {
            id = project.extra_curse_id
            changelog = ''
            releaseType = project.hasProperty('extra_curse_releasetype') ? project.extra_curse_releasetype : 'release'

            addArtifact sourceJar
        }
    }
}
